
CREATE TABLE TRANSACTION(
  "ID" UUID PRIMARY KEY,
  "IDEMPOTENCY_KEY" UUID NOT NULL UNIQUE,
  "AMOUNT" NUMERIC(13,2) NOT NULL,
  "CURRENCY" VARCHAR(3) NOT NULL DEFAULT 'HKD',
  "DEBTOR_ACCOUNT_NUMBER" VARCHAR NOT NULL,
  "CREDITOR_ACCOUNT_NUMBER" VARCHAR NOT NULL,
  "STATUS" ENUM('PENDING', 'SUCCESS', 'FAIL') NOT NULL DEFAULT 'PENDING' ,
  "CREATED_AT" TIMESTAMP DEFAULT 'NOW()',
  "UPDATED_AT" TIMESTAMP DEFAULT 'NOW()' ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE ACCOUNT (
  "ACCOUNT_NUMBER" VARCHAR PRIMARY KEY,
  "BALANCE" NUMERIC(13,2) NOT NULL,
  "CURRENCY" VARCHAR(3) NOT NULL DEFAULT 'HKD',
  "CREATED_AT" TIMESTAMP DEFAULT 'NOW()',
  "UPDATED_AT" TIMESTAMP DEFAULT 'NOW()' ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE TRANSACTION_LOG (
  "ID" UUID PRIMARY KEY,
  "TRANSACTION_ID" UUID NOT NULL,
  "STATUS" ENUM('PENDING', 'SUCCESS', 'FAIL') NOT NULL DEFAULT 'PENDING' ,
  "TIMESTAMP" TIMESTAMP NOT NULL,
  "REASON" VARCHAR
);

ALTER TABLE TRANSACTION ADD FOREIGN KEY ("DEBTOR_ACCOUNT_NUMBER") REFERENCES ACCOUNT("ACCOUNT_NUMBER");

ALTER TABLE TRANSACTION ADD FOREIGN KEY ("CREDITOR_ACCOUNT_NUMBER") REFERENCES ACCOUNT("ACCOUNT_NUMBER");

ALTER TABLE TRANSACTION_LOG ADD FOREIGN KEY ("TRANSACTION_ID") REFERENCES TRANSACTION ("ID");